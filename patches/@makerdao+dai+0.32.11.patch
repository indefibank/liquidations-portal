diff --git a/node_modules/@makerdao/dai/dist/contracts/abis.js b/node_modules/@makerdao/dai/dist/contracts/abis.js
index 6112cae..d91dd71 100644
--- a/node_modules/@makerdao/dai/dist/contracts/abis.js
+++ b/node_modules/@makerdao/dai/dist/contracts/abis.js
@@ -23,6 +23,8 @@ var _ERC = _interopRequireDefault(require("./abis/ERC20.json"));
 
 var _WETH = _interopRequireDefault(require("./abis/WETH9.json"));
 
+var _WCOIN = _interopRequireDefault(require("./abis/WETH9.json"));
+
 var _DSValue = _interopRequireDefault(require("./abis/DSValue.json"));
 
 var _DSGuard = _interopRequireDefault(require("./abis/DSGuard.json"));
@@ -68,6 +70,7 @@ exports.daiV1 = daiV1;
 var dappHub = {
   dsValue: _DSValue["default"],
   dsEthToken: _WETH["default"],
+  dsCoinToken: _WCOIN["default"],
   dsGuard: _DSGuard["default"],
   dsChief: _DSChief["default"],
   dsSpell: _DSSpell["default"],
diff --git a/node_modules/@makerdao/dai/dist/contracts/abis/WCOIN9.json b/node_modules/@makerdao/dai/dist/contracts/abis/WCOIN9.json
new file mode 100644
index 0000000..68e6e23
--- /dev/null
+++ b/node_modules/@makerdao/dai/dist/contracts/abis/WCOIN9.json
@@ -0,0 +1 @@
+[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"guy","type":"address"},{"name":"wad","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"dst","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"dst","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"}]
diff --git a/node_modules/@makerdao/dai/dist/contracts/addresses/mumbai.json b/node_modules/@makerdao/dai/dist/contracts/addresses/mumbai.json
new file mode 100644
index 0000000..4663b08
--- /dev/null
+++ b/node_modules/@makerdao/dai/dist/contracts/addresses/mumbai.json
@@ -0,0 +1,5 @@
+{
+  "PROXY_REGISTRY": "0xA180801dd1DB8dE215af785f5f1da59622B89FEa",
+  "DS_PROXY_FACTORY": "0xfd2702f8f5f9EF7C072E1f145E351882B23d9167",
+  "MULTICALL": "0x9FcEBD2132Ce7F1Bf0B559b4239FF3c667dac04a"
+}
diff --git a/node_modules/@makerdao/dai/dist/contracts/addresses/polygon.json b/node_modules/@makerdao/dai/dist/contracts/addresses/polygon.json
new file mode 100644
index 0000000..3f9fdd5
--- /dev/null
+++ b/node_modules/@makerdao/dai/dist/contracts/addresses/polygon.json
@@ -0,0 +1,5 @@
+{
+  "PROXY_REGISTRY": "0x679a616b2A804D4Ac2612739507a93e7fa56173b",
+  "DS_PROXY_FACTORY": "0x47870Bd8E79d5b96D5cD47A57CC700dbf53b062d",
+  "MULTICALL": "0x8Eb723565eB05da4eBD1B5fB347b0cE679Bf3B67"
+}
diff --git a/node_modules/@makerdao/dai/dist/contracts/networks.js b/node_modules/@makerdao/dai/dist/contracts/networks.js
index 1c7c7a3..fdf9804 100644
--- a/node_modules/@makerdao/dai/dist/contracts/networks.js
+++ b/node_modules/@makerdao/dai/dist/contracts/networks.js
@@ -25,10 +25,16 @@ var _mainnet = _interopRequireDefault(require("./addresses/mainnet.json"));
 
 var _testnet = _interopRequireDefault(require("./addresses/testnet.json"));
 
+var _mumbai = _interopRequireDefault(require("./addresses/mumbai.json"));
+
+var _polygon = _interopRequireDefault(require("./addresses/polygon.json"));
+
 var addressMapping = {
   mainnet: _mainnet["default"],
   kovan: _kovan["default"],
-  testnet: _testnet["default"]
+  testnet: _testnet["default"],
+  mumbai: _mumbai["default"],
+  polygon: _polygon["default"]
 };
 
 function contractAddressesInfo(addresses) {
@@ -128,6 +134,14 @@ var _default = [{
   name: 'kovan',
   networkId: 42,
   contracts: contractInfo('kovan')
+}, {
+  name: 'mumbai',
+  networkId: 80001,
+  contracts: contractInfo('mumbai')
+}, {
+  name: 'polygon',
+  networkId: 137,
+  contracts: contractInfo('polygon')
 }, {
   name: 'test',
   networkId: 1337,
diff --git a/node_modules/@makerdao/dai/dist/src/eth/SmartContractService.js b/node_modules/@makerdao/dai/dist/src/eth/SmartContractService.js
index 1c4ed3f..455bfa6 100644
--- a/node_modules/@makerdao/dai/dist/src/eth/SmartContractService.js
+++ b/node_modules/@makerdao/dai/dist/src/eth/SmartContractService.js
@@ -123,9 +123,7 @@ var SmartContractService = /*#__PURE__*/function (_PrivateService) {
           version = _ref3.version,
           _ref3$wrap = _ref3.wrap,
           wrap = _ref3$wrap === void 0 ? true : _ref3$wrap;
-
       var info = this._getContractInfo(name, version);
-
       return this.getContractByAddressAndAbi(info.address, info.abi, {
         name: name,
         wrap: wrap
diff --git a/node_modules/@makerdao/dai/dist/src/eth/TransactionManager.js b/node_modules/@makerdao/dai/dist/src/eth/TransactionManager.js
index 5cfe080..9f24aca 100644
--- a/node_modules/@makerdao/dai/dist/src/eth/TransactionManager.js
+++ b/node_modules/@makerdao/dai/dist/src/eth/TransactionManager.js
@@ -297,7 +297,7 @@ var TransactionManager = /*#__PURE__*/function (_PublicService) {
       // the transaction object under that promise's id, so that it can be looked
       // up when calling a contract function indirectly via two or more nested
       // service method calls, e.g.
-      // EthereumCdpService.lockEth -> WethToken.deposit.
+      // EthereumCdpService.lockCOIN -> WethToken.deposit.
 
 
       if (promise) this._tracker.store((0, _utils.uniqueId)(promise), txo, {
diff --git a/node_modules/@makerdao/dai/dist/src/eth/accounts/factories.js b/node_modules/@makerdao/dai/dist/src/eth/accounts/factories.js
index 2b8fb35..56bcfe7 100644
--- a/node_modules/@makerdao/dai/dist/src/eth/accounts/factories.js
+++ b/node_modules/@makerdao/dai/dist/src/eth/accounts/factories.js
@@ -72,21 +72,21 @@ function _getAccountAddress() {
             (0, _assert["default"])(!(offset && address), 'Cannot set both address and offset');
             return _context.abrupt("return", new Promise(function (resolve, reject) {
               return subprovider.handleRequest({
-                method: 'eth_accounts',
+                method: 'eth_chainId',
                 params: [],
                 id: 1
               }, null, function (err, val) {
                 if (err) return reject(err);
-
-                if (address) {
-                  var matchingAddress = val.find(function (a) {
-                    return a.toLowerCase() === address.toLowerCase();
-                  });
-                  (0, _assert["default"])(matchingAddress, 'No matching address found in provider.');
-                  resolve(matchingAddress.toLowerCase());
-                } else {
-                  resolve(typeof val[offset] === 'string' ? val[offset].toLowerCase() : val[offset]);
-                }
+                resolve('0x0000000000000000000000000000000000000000'.toLowerCase());
+                // if (address) {
+                //   var matchingAddress = val.find(function (a) {
+                //     return a.toLowerCase() === address.toLowerCase();
+                //   });
+                //   (0, _assert["default"])(matchingAddress, 'No matching address found in provider.');
+                //   resolve(matchingAddress.toLowerCase());
+                // } else {
+                //   resolve(typeof val[offset] === 'string' ? val[offset].toLowerCase() : val[offset]);
+                // }
               });
             }));
 
